<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.github.debasers.screensharing</string>
	<key>connections</key>
	<dict>
		<key>88CAD8DE-F647-43DC-90A2-A00FDC10DEDF</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>17B504CA-698C-412B-8277-D82CF0105CD8</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>David Loose</string>
	<key>description</key>
	<string>Opens a screen sharing session with a computer you've used previously</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Start Screen Sharing</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>127</integer>
				<key>keyword</key>
				<string>ss</string>
				<key>script</key>
				<string>python find_servers.py {query}</string>
				<key>title</key>
				<string>Start Screen Sharing with {query}</string>
				<key>type</key>
				<integer>0</integer>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>88CAD8DE-F647-43DC-90A2-A00FDC10DEDF</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>escaping</key>
				<integer>127</integer>
				<key>script</key>
				<string>open {query}</string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>17B504CA-698C-412B-8277-D82CF0105CD8</string>
		</dict>
	</array>
	<key>readme</key>
	<string>Starts a screen sharing session with a remote host. I try to load the hosts you've connected to in the past from ~/Library/Application Support/Screen Sharing. If the argument doesn't match one of those, I just slap a "vnc://" in front of it. In either case, I start the session by running "/usr/bin/open {query}" because it worked in both cases. That could potentially lead to some unexpected effects (like, opening random files maybe?). I tried to use this maliciously and I didn't have any luck. So, good job Andrew &amp; Vera!

Thanks also to Jinn Lynn for his Python module for Alfred integration. Visit him online at http://jeeker.net. I couldn't find a direct link to his Alfred module, but it's included in this bundle (obviously). The code is licensed under the MIT license. See http://opensource.org/licenses/MIT.</string>
	<key>uidata</key>
	<dict>
		<key>17B504CA-698C-412B-8277-D82CF0105CD8</key>
		<dict>
			<key>ypos</key>
			<real>70</real>
		</dict>
		<key>88CAD8DE-F647-43DC-90A2-A00FDC10DEDF</key>
		<dict>
			<key>ypos</key>
			<real>70</real>
		</dict>
	</dict>
	<key>webaddress</key>
	<string>http://github.com/debaser121</string>
</dict>
</plist>
